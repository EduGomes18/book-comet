{"ast":null,"code":"import _asyncToGenerator from \"/home/edu/www/book-comet/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class DashboardService {\n  constructor(http, toastr) {\n    this.http = http;\n    this.toastr = toastr;\n    this.baseApiUrl = environment.baseUrl;\n    this.apiUrl = `${this.baseApiUrl}`;\n  }\n\n  getBooks(pagination, search) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield _this.http.get(`${_this.apiUrl}book?${(search === null || search === void 0 ? void 0 : search.length) > 0 ? `search=${search}&` : ''}page=${pagination.page}&limit=${pagination.limit}`).toPromise().catch(err => {\n        var _a;\n\n        console.log(err);\n        if ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.message) _this.toastr.error(err.error.message);else _this.toastr.error('Error conecting with server, try again later.');\n      });\n      return response;\n    })();\n  }\n\n  getAuthors() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('Opa');\n      const response = yield _this2.http.get(`${_this2.apiUrl}author?page=1&limit=100`).toPromise().catch(err => {\n        var _a;\n\n        console.log(err);\n        if ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.message) _this2.toastr.error(err.error.message);else _this2.toastr.error('Error conecting with server, try again later.');\n      });\n      console.log(response);\n      return response;\n    })();\n  }\n\n  createBook(book) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield _this3.http.post(`${_this3.apiUrl}book`, book).toPromise().catch(err => {\n        var _a, _b;\n\n        console.log(err);\n        if ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.message) _this3.toastr.error(err.error.message);\n        if ((_b = err === null || err === void 0 ? void 0 : err.error) === null || _b === void 0 ? void 0 : _b.error) _this3.toastr.error(err.error.error);else _this3.toastr.error('Error conecting with server, try again later.');\n      });\n      return response;\n    })();\n  }\n\n}\n\nDashboardService.ɵfac = function DashboardService_Factory(t) {\n  return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\n\nDashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DashboardService,\n  factory: DashboardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/edu/www/book-comet/frontend/src/app/services/dashboard.service.ts"],"names":["environment","i0","i1","i2","DashboardService","constructor","http","toastr","baseApiUrl","baseUrl","apiUrl","getBooks","pagination","search","response","get","length","page","limit","toPromise","catch","err","_a","console","log","error","message","getAuthors","createBook","book","post","_b","ɵfac","DashboardService_Factory","t","ɵɵinject","HttpClient","ToastrService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class DashboardService {\n    constructor(http, toastr) {\n        this.http = http;\n        this.toastr = toastr;\n        this.baseApiUrl = environment.baseUrl;\n        this.apiUrl = `${this.baseApiUrl}`;\n    }\n    async getBooks(pagination, search) {\n        const response = await this.http\n            .get(`${this.apiUrl}book?${(search === null || search === void 0 ? void 0 : search.length) > 0 ? `search=${search}&` : ''}page=${pagination.page}&limit=${pagination.limit}`)\n            .toPromise()\n            .catch((err) => {\n            var _a;\n            console.log(err);\n            if ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.message)\n                this.toastr.error(err.error.message);\n            else\n                this.toastr.error('Error conecting with server, try again later.');\n        });\n        return response;\n    }\n    async getAuthors() {\n        console.log('Opa');\n        const response = await this.http\n            .get(`${this.apiUrl}author?page=1&limit=100`)\n            .toPromise()\n            .catch((err) => {\n            var _a;\n            console.log(err);\n            if ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.message)\n                this.toastr.error(err.error.message);\n            else\n                this.toastr.error('Error conecting with server, try again later.');\n        });\n        console.log(response);\n        return response;\n    }\n    async createBook(book) {\n        const response = await this.http\n            .post(`${this.apiUrl}book`, book)\n            .toPromise()\n            .catch((err) => {\n            var _a, _b;\n            console.log(err);\n            if ((_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.message)\n                this.toastr.error(err.error.message);\n            if ((_b = err === null || err === void 0 ? void 0 : err.error) === null || _b === void 0 ? void 0 : _b.error)\n                this.toastr.error(err.error.error);\n            else\n                this.toastr.error('Error conecting with server, try again later.');\n        });\n        return response;\n    }\n}\nDashboardService.ɵfac = function DashboardService_Factory(t) { return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService)); };\nDashboardService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DashboardService, factory: DashboardService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}